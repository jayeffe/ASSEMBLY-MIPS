
# Traccia:
# 
# Dovete scrivere un programma assembly che legga da tastiera 2 stringhe e stampi in output il risultato del loro confronto, ottenuto con una funzione equivalente alla strcmp della standard library dele C.
# Tale funzione riceve come parametri i puntatori a due stringhe da confrontare e ritorna un valore negativo, 0 o un valore positivo a seconda che(rispettivamente):
# a) la prima stringa preceda la seconda in ordine alfabetico
# b) le stringhe siano uguali
# c) la prima stringa segua la seconda in ordine alfabetico

.data
frase1: .asciiz "inserisci la stringa "
frase2: .asciiz "inserisci la seconda stringa "
stringa: .space 100
stringa2: .space 50
frase3: .asciiz "stringhe uguali "
frase4: .asciiz "stringa 2 minore della stringa 1 "
frase5: .asciiz "stringa 2 maggiore della stringa 1 "


.text


.globl main
main:

la $a0,frase1
li $v0,4
syscall

la $a0,stringa
li $v0,8
li $a1,98
syscall



la $a0,frase2
li $v0,4
syscall

la $a0,stringa2
li $v0,8
li $a1,48
syscall

la $a0,stringa
la $a1,stringa2
jal strcmp


beq $v0,0,uguali

beq $v0,1,minore
la $a0,frase5
li $v0,4
syscall 
j esci
minore:
la $a0,frase4
li $v0,4
syscall 

j esci

uguali:
la $a0,frase3
li $v0,4
syscall 



esci:
li $v0,10
syscall

strcmp:
move $t9,$a0 #testa prima stringa
move $t8,$a1 #testa seconda stringa
ciclo_strcmp:
lbu $t2,($t9)
lbu $t3,($t8)
beq $t2,'\n',esci_ciclo
beq $t3,'\n',esci_ciclo2



beq $t2,$t3,return0

bgt $t2,$t3,return1
li $v0,-1
addi $t8,$t8,1
addi $t9,$t9,1
j ciclo_strcmp
return1:
li $v0,1


addi $t8,$t8,1
addi $t9,$t9,1
j ciclo_strcmp


return0:
li $v0,0





addi $t8,$t8,1
addi $t9,$t9,1
j ciclo_strcmp
esci_ciclo2:
addi $t9,$t9,1
j ciclo_strcmp
esci_ciclo:
jr $ra 

