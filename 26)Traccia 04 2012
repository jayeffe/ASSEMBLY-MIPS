.data
msg1:.asciiz "Inizializzo l'array... fatto!"
msg2:.asciiz"\n\nNumero dell' elemento (0-19, -1 per terminare) :"
msg3:.asciiz "L'elemento di posto "
msg4:.asciiz " vale -> "
 
.align 2
array :.space 80
.text
.globl main
main:
           la $a0,array
           li $t1,0
           
       loop1:    
       
           beq $t1,20,jump_to_continue
       
           sll $t2,$t1,2
           sll $t3,$t1,1
           add $t4,$t3,$t2
           add $t4,$t4,1
             
           sw $t4,0($a0)
           addi $a0,$a0,4
           addi $t1,$t1,1
           
           j loop1
           
           jump_to_continue:
           li $v0,4
           la $a0,msg1
           syscall
           
   
       loop2:
       
        
           li $v0,4
           la $a0,msg2
           syscall
           
           li $v0,5
           syscall
           
           beq $v0,-1,exit
           move $s0,$v0
           
           li $v0,4
           la $a0,msg3
           syscall
         
           li $v0,1
           move $a0,$s0
           syscall
            
           li $v0,4
           la $a0,msg4
           syscall 
           
           move $a1,$s0
           la $a0,array
           jal array_element
           
           move $a0,$v0
           li $v0,1
           syscall
           j loop2
           exit:
           li $v0,10
           syscall
           
##########################################################
array_element :

           move $t0,$a0
           move $t1,$a1
           
           li $t2,0
           
                      loop3:
                              beq $t2,$t1,found
                              
                              addi $t0,$t0,4
                              addi $t2,$t2,1
                              j loop3
                              found:
                              lw $t3,0($t0)
                              move $v0,$t3
                              jr $ra                      


