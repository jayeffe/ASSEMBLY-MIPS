.data
msg1:.asciiz "Dammi il valore di arr["
msg2:.asciiz"]["
msg3:.asciiz "] : "
msg_spazio:.asciiz"  "
msg_slash:.asciiz"\n"
msg4:.asciiz "Matrice Originale : \n"
msg5: .asciiz "\nMatrice Processata : \n"
.align 2
matrix:.space 36
matrix2:.space 36
.text
.globl main

main: 
       la $a0,matrix
       jal riempi_matrix
       
       li $v0,4
       la $a0,msg4
       syscall
       
       la $a0,matrix
       jal stampa_matrix
       
       la $a0,matrix
       jal matrix_processata
       
       li $v0,4
       la $a0,msg5
       syscall
      
       
       la $a0,matrix
       jal stampa_matrix
       
       li $v0,10
       syscall
       
#######################################################
riempi_matrix: 
              
             move $t0,$a0
             li $t1,0 #i
             li $t2,0 #j
             
             loop1:
                    beq $t2,3,avanza_i
                    li $v0,4
                    la $a0,msg1
                    syscall  
                    
                    li $v0,1
                    move $a0,$t1
                    syscall
                    
                    li $v0,4
                    la $a0,msg2
                    syscall
                    
                    li $v0,1
                    move $a0,$t2
                    syscall
                    
                    li $v0,4
                    la $a0,msg3
                    syscall
                    
                    li $v0,5
                    syscall
                    sw $v0,0($t0)
                   
                    addi $t0,$t0,4
                    addi $t2,$t2,1
                     
                    j loop1
                    
                    avanza_i:
                    
                        addi $t1,$t1,1
                        beq $t1,3,exit
                        li $t2,0
                        j loop1
                    
                    exit :
                    jr $ra
#######################################################
stampa_matrix:                     
            
            move $t0,$a0
            li $t1,0
            li $t2,0
            li $t3,0
            
            loop2:
                   beq $t3,9,exit2
                   beq $t2,3,jump_down
                    
                   lw $t1,0($t0)
                   
                   li $v0,1
                   move $a0,$t1
                   syscall
                   
                   li $v0,4
                   la $a0,msg_spazio
                   syscall
                   
                   addi $t0,$t0,4
                   addi $t2,$t2,1
                   addi $t3,$t3,1
                   j loop2
                   
                   jump_down:
                        
                        li $v0,4
                        la $a0,msg_slash
                        syscall
                   
                        li $t2,0
                   
                        j loop2
                   
                   exit2:
                         jr $ra
#######################################################
matrix_processata :

             move $t0,$a0 #matrix2
             li $t1,0
             la $t2,matrix
             li $t4,0
             
             loop3: 
                    beq $t1,9,exit3
                   
                  
                    beq $t1,3,azzera_valore
                    beq $t1,6,azzera_valore
                    beq $t1,7,azzera_valore
                    
                    lw $t3,0($t2)
                    sw $t3,0($t0)              
                                          
                    addi $t0,$t0,4
                    addi $t2,$t2,4
                    addi $t1,$t1,1
                    j loop3
                   
                     azzera_valore:
                    
                          sw $t4,0($t0)
                          addi $t0,$t0,4
                          addi $t2,$t2,4
                          addi $t1,$t1,1
                    
                           j loop3
                    
                    exit3:
                           jr $ra      
                                                                                            
