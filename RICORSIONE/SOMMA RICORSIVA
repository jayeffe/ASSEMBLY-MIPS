#sommA ricorsiva 

 #Soluzione:
   # int somma(int  A[]; int n)
    #{
    #if (n=0) return  0
     #  else return  A[n] + somma(a, n-1)
    #end


.data 
inserisci: .asciiz "inserisci il numero "


.text 

.globl main

main:
la $a0,inserisci
li $v0,4
syscall

li $v0,5
syscall

move $a0,$v0 #il numero di cui devo calcolare la somma 
jal somma_ricorsiva

move $a0,$v0
li $v0,1
syscall

esci:
li $v0,10
syscall

somma_ricorsiva:

beq $a0,0,caso_base
#qui è il caso non base, quindi 
addi $sp,$sp,-8
sw $a0,4($sp)
sw $ra,0($sp)
#decremento di uno lo stack pointer
addi $a0,$a0,-1
#richiamo la funzione
jal somma_ricorsiva
#dopo che ho chiamato la mia funzione in a0 ha un valore diverso da quello di ingresso
lw $a0,4($sp) #aggiorno

#ora devo ritornare in vo il caso base 
add $v0,$v0,$a0
lw $ra,0($sp)
addi $sp,$sp,8

jr $ra 

caso_base:
li $v0,0
jr $ra 

 