.data
str1: .asciiz "\nInserisci quante lettere vuoi : "
str2: .asciiz "\nInserisci lettera -> "
sep : .asciiz " "
str3 : .asciiz "\nHai inserito queste lettere : "
str4: .asciiz "\nOrdine alfabetico : "
.text 
.globl main

main : 
      li $v0 ,4
      la $a0,str1
      syscall
      
      li $v0,5
      syscall
      
      li $t0,4
      
      #dimensioni array in s0#
      move $s0,$v0 
      
      mult $s0,$t0
      mflo $t1
      
      move $s3, $t1
      sub $t2,$t2,$s3
      add $sp,$sp,$t2
      
      move $s1,$sp
      move $a0,$s1
      jal inserimento
      
      li $v0 ,4
      la $a0,str3
      syscall
      

      move $a0,$s1
      jal stampa
       
      move $a0,$s1
      sub $s2,$s0,1
      jal ordinamento
      
      li $v0 ,4
      la $a0,str4
      syscall
      
      move $a0,$s1
      jal stampa
  
      add $sp,$sp,$s3
          
      li $v0,10
      syscall  
     
############################
inserimento:
       
     move $t0,$a0      
     li $t1,0
     
     loop1:
           beq $t1,$s0,exit1
           
           li $v0 ,4
           la $a0,str2
           syscall
           
           li $v0,12
           syscall
            
           move $a0,$v0
           sw $a0,0($t0)
           
           addi $t0,$t0,4
           addi $t1,$t1,1
           
           j loop1
           
     exit1: 
           jr $ra          
############################
stampa : 
      
      move $t0,$a0
      li $t1,0
      
      loop2:   
            beq $t1,$s0,exit2
            
            li $v0,4
            la $a0,sep
            syscall

            lb $t2,0($t0)
            move $a0,$t2
            
            li $v0,11
            syscall
            
            addi $t0,$t0,4
            addi $t1,$t1,1
            
            j loop2


      exit2: 
           jr $ra 
############################
ordinamento : 
        move $t0,$a0
        li $t1,0
        
        loop3: 
              bge $t1,$s2,exit3
              
              lb $t2,0($t0)
              lb $t3,4($t0)
              
              bgt $t2,$t3,to_swap
              addi $t0,$t0,4
              addi $t1,$t1,1
              
              j loop3
        
        to_swap :
                 sb $t2,4($t0)
                 sb $t3,0($t0)
                 
                 j ordinamento       
        exit3: 
           jr $ra 